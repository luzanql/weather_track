openapi: 3.0.0
info:
  title: 'Weather Track Api'
  description: 'Curious about how you feel on gray days? Do you prefer sunny days? Track your weather requests!'
  version: 1.0.0
paths:
  /api/v1/user/create:
    post:
      tags:
        - User
      summary: 'Save a user in database'
      operationId: storeUser
      parameters:
        -
          name: name
          in: query
          description: 'The user name'
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The user email'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'The user password'
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              example: '{ ''validation'': { ''name'': [ ''Name is required'' ], ''email'': [ ''Email is not a valid email address'']} }'
  /api/v1/user/signin:
    post:
      tags:
        - User
      summary: 'Sign in an user and return token'
      operationId: signinUser
      parameters:
        -
          name: email
          in: query
          description: 'The user email'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'The user password'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
              example: '{ ''token'': ''eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MiwiZW1haWwiOiJjaGVvQGFiczEyMy5jb20iLCJpYXQiOjE2NTA3MTE3NTIsIm5iZiI6MTY1MDcxMTc1Mn0.irJpufliLpUKZ5LE8aUaDci5mY5vo0BfEFWbTKj9n4Q'' }'
        '401':
          description: Unauthorized
  /api/v1/history:
    get:
      tags:
        - Weather
      summary: 'History of queries made to the API service by specific user'
      operationId: getHistory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
      security:
        -
          token: []
components:
  schemas:
    History:
      title: History
      description: 'Get History model (Logs) response'
      properties:
        page_number:
          type: integer
          format: int64
          readOnly: true
          example: 1
        page_size:
          type: integer
          format: int64
          readOnly: true
          example: 10
        total_record_count:
          type: integer
          format: int64
          readOnly: true
          example: 1
        records:
          type: array
          items: {  }
          example: '[{''date'': ''2020-04-23T09:32:19.000000Z'', ''temp'': ''8.07'', ''feels_like'': ''7''}]'
      type: object
    User:
      title: User
      description: 'A user model response'
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 1
        name:
          type: string
          example: Test
        email:
          type: string
          example: test@gmail.com
      type: object
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header
